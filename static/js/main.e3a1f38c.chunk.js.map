{"version":3,"sources":["actions/index.js","components/app.js","reducers/index.js","index.js"],"names":["getMovies","page","dispatch","axios","get","concat","then","res","type","movies","data","content","catch","error","console","log","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","event","window","innerHeight","scrollY","document","body","offsetHeight","state","setState","fetchMovies","posts","init","isVisible","isMobile","actions","addEventListener","removeEventListener","image","index","length","react_default","a","createElement","LazyLoad_default","style","alignItems","overflow","width","src","alt","_this2","map","post","Col","xs","float","marginBottom","marginRight","marginLeft","display","paddingBottom","genImage","color","fontSize","name","position","top","marginTop","maxHeight","height","paddingTop","renderMovies","showPosts","renderHead","showHead","className","Grid","Row","right","padding","margin","backgroundPosition","backgroundSize","backgroundImage","bottom","left","backgroundColor","paddingLeft","paddingRight","Component","connect","bindActionCreators","initalState","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","app","getElementById"],"mappings":"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","file":"static/js/main.e3a1f38c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getMovies2 = movies => ({\n  type: \"GET_MOVIES\",\n  movies\n});\n\nexport const getMovies = page => {\n  return dispatch => {\n    axios\n      .get(`CONTENTLISTINGPAGE-PAGE${page}.json`)\n      .then(res => {\n        dispatch(getMovies2(res.data.page[\"content-items\"].content));\n      })\n      .catch(error => {\n        console.log(`error: ${error}`);\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport LazyLoad from \"react-lazy-load\";\nimport { isMobile } from \"react-device-detect\";\nimport { StickyContainer, Sticky } from \"react-sticky\";\nimport { getMovies } from \"../actions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      page: 1,\n      init: true,\n      isVisible: false,\n      isMobile: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.getMovies(this.state.page);\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  genImage(image, index, length) {\n    return (\n      <LazyLoad>\n        <div\n          style={{\n            alignItems: \"center\",\n            overflow: \"hidden\"\n          }}\n        >\n          <img\n            style={{\n              width: \"100%\"\n            }}\n            src={\n              `./assets/${image}` ||\n              `./assets/placeholder_for_missing_posters.png`\n            }\n            alt={`./assets/placeholder_for_missing_posters.png`}\n          />\n        </div>\n      </LazyLoad>\n    );\n  }\n\n  showPosts() {\n    return this.props.movies.length > 1 ? (\n      this.props.movies.map((post, index) => {\n        const image = post[\"poster-image\"];\n        return (\n          <Col\n            xs={4}\n            style={{\n              float: \"left\",\n              marginBottom: \"45px\",\n              marginRight: \"0px\",\n              marginLeft: \"0px\"\n            }}\n          >\n            <div\n              style={{\n                display: \"inline-block\"\n              }}\n            >\n              <div style={{ paddingBottom: \"10px\" }}>\n                {this.genImage(image, index, this.props.movies.length)}\n              </div>\n              <p style={{ color: \"#ffffff\", fontSize: \"3vw\" }}>{post.name}</p>\n            </div>\n          </Col>\n        );\n      })\n    ) : (\n      <div>Loading...</div>\n    );\n  }\n  showHead() {\n    return (\n      <div style={{ position: \"sticky\", top: \"0\" }}>\n        <div\n          style={{\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n            maxHeight: \"190px\"\n          }}\n        >\n          <input\n            type=\"image\"\n            src=\"./assets/Back.png\"\n            width=\"28\"\n            height=\"28\"\n            style={{ display: \"inline\", float: \"left\", paddingTop: \"0px\" }}\n          />\n          <p\n            style={{\n              display: \"inline\",\n              color: \"#ffffff\",\n              fontSize: \"4vw\",\n              marginLeft: \"20px\"\n            }}\n          >\n            {\" \"}\n            Romantic Comedy\n          </p>\n          <input\n            type=\"image\"\n            src=\"./assets/search.png\"\n            width=\"28\"\n            height=\"28\"\n            style={{ display: \"inline\", float: \"right\", paddingTop: \"0px\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n  fetchMovies(page) {\n    console.log(`new movies for page ${page}`);\n    this.props.actions.getMovies(this.state.page);\n  }\n\n  handleScroll = event => {\n    if (\n      window.innerHeight + window.scrollY >=\n      document.body.offsetHeight - 400\n    ) {\n      if (this.state.page < 3) {\n        this.setState({ page: this.state.page + 1 });\n        this.fetchMovies(this.state.page);\n      }\n\n      console.log(`looks like yeah `);\n    }\n  };\n\n  render() {\n    const renderMovies = this.showPosts();\n    const renderHead = this.showHead();\n    return isMobile ? (\n      <div className=\"\">\n        <div>{renderHead}</div>\n        <Grid>\n          <div>\n            <Row>{renderMovies}</Row>\n          </div>\n        </Grid>\n      </div>\n    ) : (\n      <div>\n        <p\n          style={{\n            color: \"#ffffff\",\n            fontSize: \"25px\",\n            paddingTop: \"30px\",\n            right: \"50%\"\n          }}\n        >\n          React JS/ Workshop/ Diagnal technologies\n        </p>\n        <div\n          style={{\n            padding: 0,\n            margin: 0,\n            marginTop: \"30px\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            height: \"500px\",\n            backgroundImage: \"url(./assets/mobileOnly.jpg)\",\n            color: \"#ffffff\",\n            fontSize: \"25px\",\n            position: \"relative\"\n          }}\n        >\n          <p\n            style={{\n              position: \"absolute\",\n              bottom: \"80px\",\n              left: \"20px\",\n              backgroundColor: \"#191a21\",\n              color: \"#ffffff\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              width: \"300px\"\n            }}\n          >\n            This is Mobile only version, please view the page in mobile or use\n            browser devtools to toggle device view and then refresh the page.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { movies: state.movies };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators({ getMovies }, dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { combineReducers } from \"redux\";\n\nconst initalState = [];\n\nconst moviesReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES\":\n      return [...state, ...action.movies];\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport App from \"./components/app\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}